// <auto-generated />
using System;
using CrudEF_Console.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrudEF_Console.Migrations
{
    [DbContext(typeof(CRUDEF_Context))]
    [Migration("20181018114012_NovoMundo")]
    partial class NovoMundo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrudEF_Console.Negocio.Artigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("artigo_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnName("ISBN")
                        .HasMaxLength(10);

                    b.Property<int>("ano")
                        .HasColumnName("ano")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataPublicacao")
                        .HasColumnName("datapublicacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("idioma_original")
                        .IsRequired();

                    b.Property<int?>("idioma_traduzido");

                    b.Property<int?>("pesquisador_id")
                        .IsRequired();

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnName("titulo")
                        .HasMaxLength(50);

                    b.Property<int?>("veiculo_publicacao_id");

                    b.HasKey("Id");

                    b.HasIndex("idioma_original");

                    b.HasIndex("idioma_traduzido");

                    b.HasIndex("pesquisador_id");

                    b.HasIndex("veiculo_publicacao_id");

                    b.ToTable("Artigo");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("pesquisador_id");

                    b.Property<string>("texto");

                    b.Property<string>("tipo");

                    b.HasKey("Id");

                    b.HasIndex("pesquisador_id");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("departamento_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idioma_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tbl_Idioma");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Pesquisador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pesquisador_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(50);

                    b.Property<int?>("departamento_id")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("departamento_id");

                    b.ToTable("Pesquisadores");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Veiculo_Publicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnName("tipo")
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Veiculo_Publicacao");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Artigo", b =>
                {
                    b.HasOne("CrudEF_Console.Negocio.Idioma", "idiomaOriginal")
                        .WithMany("ArtigoOriginal")
                        .HasForeignKey("idioma_original")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CrudEF_Console.Negocio.Idioma", "idiomaTraduzido")
                        .WithMany("ArtigoTraduzido")
                        .HasForeignKey("idioma_traduzido");

                    b.HasOne("CrudEF_Console.Negocio.Pesquisador", "Pesquisador")
                        .WithMany("Artigos")
                        .HasForeignKey("pesquisador_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CrudEF_Console.Negocio.Veiculo_Publicacao", "veiculo_publicacao")
                        .WithMany("artigo")
                        .HasForeignKey("veiculo_publicacao_id");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Contato", b =>
                {
                    b.HasOne("CrudEF_Console.Negocio.Pesquisador")
                        .WithMany("Contatos")
                        .HasForeignKey("pesquisador_id");
                });

            modelBuilder.Entity("CrudEF_Console.Negocio.Pesquisador", b =>
                {
                    b.HasOne("CrudEF_Console.Negocio.Departamento", "Departamento")
                        .WithMany("Pesquisadores")
                        .HasForeignKey("departamento_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
